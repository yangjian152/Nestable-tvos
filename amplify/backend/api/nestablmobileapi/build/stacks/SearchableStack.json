{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "An auto-generated nested stack.",
    "Metadata": {},
    "Parameters": {
        "DynamoDBModelTableReadIOPS": {
            "Type": "Number",
            "Description": "The number of read IOPS the table should support.",
            "Default": 5
        },
        "DynamoDBModelTableWriteIOPS": {
            "Type": "Number",
            "Description": "The number of write IOPS the table should support.",
            "Default": 5
        },
        "DynamoDBBillingMode": {
            "Type": "String",
            "Description": "Configure @model types to create DynamoDB tables with PAY_PER_REQUEST or PROVISIONED billing modes.",
            "Default": "PAY_PER_REQUEST",
            "AllowedValues": [
                "PAY_PER_REQUEST",
                "PROVISIONED"
            ]
        },
        "DynamoDBEnablePointInTimeRecovery": {
            "Type": "String",
            "Description": "Whether to enable Point in Time Recovery on the table",
            "Default": "false",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "DynamoDBEnableServerSideEncryption": {
            "Type": "String",
            "Description": "Enable server side encryption powered by KMS.",
            "Default": "true",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "ElasticSearchAccessIAMRoleName": {
            "Type": "String",
            "Description": "The name of the IAM role assumed by AppSync for Elasticsearch.",
            "Default": "AppSyncElasticsearchRole"
        },
        "ElasticSearchStreamingLambdaHandlerName": {
            "Type": "String",
            "Description": "The name of the lambda handler.",
            "Default": "python_streaming_function.lambda_handler"
        },
        "ElasticSearchStreamingLambdaRuntime": {
            "Type": "String",
            "Description": "The lambda runtime                 (https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html#SSS-CreateFunction-request-Runtime)",
            "Default": "python3.6"
        },
        "ElasticSearchStreamingFunctionName": {
            "Type": "String",
            "Description": "The name of the streaming lambda function.",
            "Default": "DdbToEsFn"
        },
        "ElasticSearchStreamingIAMRoleName": {
            "Type": "String",
            "Description": "The name of the streaming lambda function IAM role.",
            "Default": "SearchableLambdaIAMRole"
        },
        "ElasticSearchDebugStreamingLambda": {
            "Type": "Number",
            "Description": "Enable debug logs for the Dynamo -> ES streaming lambda.",
            "Default": 1,
            "AllowedValues": [
                0,
                1
            ]
        },
        "ElasticSearchInstanceCount": {
            "Type": "Number",
            "Description": "The number of instances to launch into the Elasticsearch domain.",
            "Default": 1
        },
        "ElasticSearchInstanceType": {
            "Type": "String",
            "Description": "The type of instance to launch into the Elasticsearch domain.",
            "Default": "t2.small.elasticsearch",
            "AllowedValues": [
                "t2.small.elasticsearch",
                "t2.medium.elasticsearch",
                "c4.large.elasticsearch",
                "c4.xlarge.elasticsearch",
                "c4.2xlarge.elasticsearch",
                "c4.4xlarge.elasticsearch",
                "c4.8xlarge.elasticsearch",
                "m3.medium.elasticsearch",
                "m3.large.elasticsearch",
                "m3.xlarge.elasticsearch",
                "m3.2xlarge.elasticsearch",
                "m4.large.elasticsearch",
                "m4.xlarge.elasticsearch",
                "m4.2xlarge.elasticsearch",
                "m4.4xlarge.elasticsearch",
                "m4.10xlarge.elasticsearch",
                "r3.large.elasticsearch",
                "r3.xlarge.elasticsearch",
                "r3.2xlarge.elasticsearch",
                "r3.4xlarge.elasticsearch",
                "r3.8xlarge.elasticsearch",
                "r4.large.elasticsearch",
                "r4.xlarge.elasticsearch",
                "r4.2xlarge.elasticsearch",
                "r4.4xlarge.elasticsearch",
                "r4.8xlarge.elasticsearch",
                "r4.16xlarge.elasticsearch",
                "i2.xlarge.elasticsearch",
                "i2.2xlarge.elasticsearch",
                "i3.large.elasticsearch",
                "i3.xlarge.elasticsearch",
                "i3.2xlarge.elasticsearch",
                "i3.4xlarge.elasticsearch",
                "i3.8xlarge.elasticsearch",
                "i3.16xlarge.elasticsearch"
            ]
        },
        "ElasticSearchEBSVolumeGB": {
            "Type": "Number",
            "Description": "The size in GB of the EBS volumes that contain our data.",
            "Default": 10
        },
        "AppSyncApiName": {
            "Type": "String",
            "Description": "The name of the AppSync API",
            "Default": "AppSyncSimpleTransform"
        },
        "APIKeyExpirationEpoch": {
            "Type": "Number",
            "Description": "The epoch time in seconds when the API Key should expire. Setting this to 0 will default to 7 days from the deployment date. Setting this to -1 will not create an API Key.",
            "Default": 0,
            "MinValue": -1
        },
        "CreateAPIKey": {
            "Type": "Number",
            "Description": "The boolean value to control if an API Key will be created or not. The value of the property is automatically set by the CLI. If the value is set to 0 no API Key will be created.",
            "Default": 0,
            "MinValue": 0,
            "MaxValue": 1
        },
        "AuthCognitoUserPoolId": {
            "Type": "String",
            "Description": "The id of an existing User Pool to connect. If this is changed, a user pool will not be created for you.",
            "Default": "NONE"
        },
        "env": {
            "Type": "String",
            "Description": "The environment name. e.g. Dev, Test, or Production",
            "Default": "NONE"
        },
        "S3DeploymentBucket": {
            "Type": "String",
            "Description": "The S3 bucket containing all deployment assets for the project."
        },
        "S3DeploymentRootKey": {
            "Type": "String",
            "Description": "An S3 key relative to the S3DeploymentBucket that points to the root of the deployment directory."
        },
        "AppSyncApiId": {
            "Type": "String",
            "Description": "The id of the AppSync API associated with this project."
        },
        "GetAttGraphQLAPIApiId": {
            "Type": "String",
            "Description": "Auto-generated parameter that forwards Fn.GetAtt(GraphQLAPI, ApiId) through to nested stacks."
        }
    },
    "Resources": {
        "ElasticSearchAccessIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::If": [
                        "HasEnvironmentParameter",
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "ElasticSearchAccessIAMRoleName"
                                    },
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    },
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        },
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "ElasticSearchAccessIAMRoleName"
                                    },
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "appsync.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "ElasticsearchAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "es:ESHttpPost",
                                        "es:ESHttpDelete",
                                        "es:ESHttpHead",
                                        "es:ESHttpGet",
                                        "es:ESHttpPost",
                                        "es:ESHttpPut"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Fn::GetAtt": [
                                                        "ElasticSearchDomain",
                                                        "DomainArn"
                                                    ]
                                                },
                                                "/*"
                                            ]
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ElasticSearchDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
                "ApiId": {
                    "Ref": "GetAttGraphQLAPIApiId"
                },
                "Name": "ElasticSearchDomain",
                "Type": "AMAZON_ELASTICSEARCH",
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "ElasticSearchAccessIAMRole",
                        "Arn"
                    ]
                },
                "ElasticsearchConfig": {
                    "AwsRegion": {
                        "Fn::Select": [
                            3,
                            {
                                "Fn::Split": [
                                    ":",
                                    {
                                        "Fn::GetAtt": [
                                            "ElasticSearchDomain",
                                            "DomainArn"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "Endpoint": {
                        "Fn::Join": [
                            "",
                            [
                                "https://",
                                {
                                    "Fn::GetAtt": [
                                        "ElasticSearchDomain",
                                        "DomainEndpoint"
                                    ]
                                }
                            ]
                        ]
                    }
                }
            },
            "DependsOn": "ElasticSearchDomain"
        },
        "ElasticSearchDomain": {
            "Type": "AWS::Elasticsearch::Domain",
            "Properties": {
                "DomainName": {
                    "Fn::If": [
                        "HasEnvironmentParameter",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    "d",
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "ElasticsearchVersion": "6.2",
                "ElasticsearchClusterConfig": {
                    "ZoneAwarenessEnabled": false,
                    "InstanceCount": {
                        "Ref": "ElasticSearchInstanceCount"
                    },
                    "InstanceType": {
                        "Ref": "ElasticSearchInstanceType"
                    }
                },
                "EBSOptions": {
                    "EBSEnabled": true,
                    "VolumeType": "gp2",
                    "VolumeSize": {
                        "Ref": "ElasticSearchEBSVolumeGB"
                    }
                }
            }
        },
        "ElasticSearchStreamingLambdaIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::If": [
                        "HasEnvironmentParameter",
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "ElasticSearchStreamingIAMRoleName"
                                    },
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    },
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        },
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "ElasticSearchStreamingIAMRoleName"
                                    },
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "ElasticsearchAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "es:ESHttpPost",
                                        "es:ESHttpDelete",
                                        "es:ESHttpHead",
                                        "es:ESHttpGet",
                                        "es:ESHttpPost",
                                        "es:ESHttpPut"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Fn::GetAtt": [
                                                        "ElasticSearchDomain",
                                                        "DomainArn"
                                                    ]
                                                },
                                                "/*"
                                            ]
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "DynamoDBStreamAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:DescribeStream",
                                        "dynamodb:GetRecords",
                                        "dynamodb:GetShardIterator",
                                        "dynamodb:ListStreams"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "CloudWatchLogsAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ElasticSearchStreamingLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3DeploymentBucket"
                    },
                    "S3Key": {
                        "Fn::Join": [
                            "/",
                            [
                                {
                                    "Ref": "S3DeploymentRootKey"
                                },
                                "functions",
                                {
                                    "Fn::Join": [
                                        ".",
                                        [
                                            "ElasticSearchStreamingLambdaFunction",
                                            "zip"
                                        ]
                                    ]
                                }
                            ]
                        ]
                    }
                },
                "FunctionName": {
                    "Fn::If": [
                        "HasEnvironmentParameter",
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "ElasticSearchStreamingFunctionName"
                                    },
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    },
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        },
                        {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "ElasticSearchStreamingFunctionName"
                                    },
                                    {
                                        "Ref": "GetAttGraphQLAPIApiId"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "Handler": {
                    "Ref": "ElasticSearchStreamingLambdaHandlerName"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "ElasticSearchStreamingLambdaIAMRole",
                        "Arn"
                    ]
                },
                "Runtime": {
                    "Ref": "ElasticSearchStreamingLambdaRuntime"
                },
                "Layers": [
                    {
                        "Fn::FindInMap": [
                            "LayerResourceMapping",
                            {
                                "Ref": "AWS::Region"
                            },
                            "layerRegion"
                        ]
                    }
                ],
                "Environment": {
                    "Variables": {
                        "ES_ENDPOINT": {
                            "Fn::Join": [
                                "",
                                [
                                    "https://",
                                    {
                                        "Fn::GetAtt": [
                                            "ElasticSearchDomain",
                                            "DomainEndpoint"
                                        ]
                                    }
                                ]
                            ]
                        },
                        "ES_REGION": {
                            "Fn::Select": [
                                3,
                                {
                                    "Fn::Split": [
                                        ":",
                                        {
                                            "Fn::GetAtt": [
                                                "ElasticSearchDomain",
                                                "DomainArn"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "DEBUG": {
                            "Ref": "ElasticSearchDebugStreamingLambda"
                        }
                    }
                }
            },
            "DependsOn": [
                "ElasticSearchStreamingLambdaIAMRole",
                "ElasticSearchDomain"
            ]
        },
        "SearchableVideoLambdaMapping": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "BatchSize": 1,
                "Enabled": true,
                "EventSourceArn": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            ":",
                            [
                                {
                                    "Ref": "AppSyncApiId"
                                },
                                "GetAtt",
                                "VideoTable",
                                "StreamArn"
                            ]
                        ]
                    }
                },
                "FunctionName": {
                    "Fn::GetAtt": [
                        "ElasticSearchStreamingLambdaFunction",
                        "Arn"
                    ]
                },
                "StartingPosition": "LATEST"
            },
            "DependsOn": [
                "ElasticSearchStreamingLambdaFunction"
            ]
        },
        "SearchVideoResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Ref": "GetAttGraphQLAPIApiId"
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "ElasticSearchDataSource",
                        "Name"
                    ]
                },
                "FieldName": "searchVideos",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Query",
                                        "searchVideos",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Query",
                                        "searchVideos",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": [
                "ElasticSearchDataSource"
            ]
        },
        "SearchableLikedVideoLambdaMapping": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "BatchSize": 1,
                "Enabled": true,
                "EventSourceArn": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            ":",
                            [
                                {
                                    "Ref": "AppSyncApiId"
                                },
                                "GetAtt",
                                "LikedVideoTable",
                                "StreamArn"
                            ]
                        ]
                    }
                },
                "FunctionName": {
                    "Fn::GetAtt": [
                        "ElasticSearchStreamingLambdaFunction",
                        "Arn"
                    ]
                },
                "StartingPosition": "LATEST"
            },
            "DependsOn": [
                "ElasticSearchStreamingLambdaFunction"
            ]
        },
        "SearchLikedVideoResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Ref": "GetAttGraphQLAPIApiId"
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "ElasticSearchDataSource",
                        "Name"
                    ]
                },
                "FieldName": "searchLikedVideos",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Query",
                                        "searchLikedVideos",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Query",
                                        "searchLikedVideos",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": [
                "ElasticSearchDataSource"
            ]
        },
        "SearchableVideoCategoriesLambdaMapping": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "BatchSize": 1,
                "Enabled": true,
                "EventSourceArn": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            ":",
                            [
                                {
                                    "Ref": "AppSyncApiId"
                                },
                                "GetAtt",
                                "VideoCategoriesTable",
                                "StreamArn"
                            ]
                        ]
                    }
                },
                "FunctionName": {
                    "Fn::GetAtt": [
                        "ElasticSearchStreamingLambdaFunction",
                        "Arn"
                    ]
                },
                "StartingPosition": "LATEST"
            },
            "DependsOn": [
                "ElasticSearchStreamingLambdaFunction"
            ]
        },
        "SearchVideoCategoriesResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Ref": "GetAttGraphQLAPIApiId"
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "ElasticSearchDataSource",
                        "Name"
                    ]
                },
                "FieldName": "searchVideoCategoriess",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Query",
                                        "searchVideoCategoriess",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Query",
                                        "searchVideoCategoriess",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": [
                "ElasticSearchDataSource"
            ]
        },
        "SearchableCategoryLambdaMapping": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "BatchSize": 1,
                "Enabled": true,
                "EventSourceArn": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            ":",
                            [
                                {
                                    "Ref": "AppSyncApiId"
                                },
                                "GetAtt",
                                "CategoryTable",
                                "StreamArn"
                            ]
                        ]
                    }
                },
                "FunctionName": {
                    "Fn::GetAtt": [
                        "ElasticSearchStreamingLambdaFunction",
                        "Arn"
                    ]
                },
                "StartingPosition": "LATEST"
            },
            "DependsOn": [
                "ElasticSearchStreamingLambdaFunction"
            ]
        },
        "SearchCategoryResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Ref": "GetAttGraphQLAPIApiId"
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "ElasticSearchDataSource",
                        "Name"
                    ]
                },
                "FieldName": "searchCategorys",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Query",
                                        "searchCategorys",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Query",
                                        "searchCategorys",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": [
                "ElasticSearchDataSource"
            ]
        },
        "SearchableUserProfileLambdaMapping": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "BatchSize": 1,
                "Enabled": true,
                "EventSourceArn": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            ":",
                            [
                                {
                                    "Ref": "AppSyncApiId"
                                },
                                "GetAtt",
                                "UserProfileTable",
                                "StreamArn"
                            ]
                        ]
                    }
                },
                "FunctionName": {
                    "Fn::GetAtt": [
                        "ElasticSearchStreamingLambdaFunction",
                        "Arn"
                    ]
                },
                "StartingPosition": "LATEST"
            },
            "DependsOn": [
                "ElasticSearchStreamingLambdaFunction"
            ]
        },
        "SearchUserProfileResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Ref": "GetAttGraphQLAPIApiId"
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "ElasticSearchDataSource",
                        "Name"
                    ]
                },
                "FieldName": "searchUserProfiles",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Query",
                                        "searchUserProfiles",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Query",
                                        "searchUserProfiles",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": [
                "ElasticSearchDataSource"
            ]
        },
        "SearchableFollowingUserLambdaMapping": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "BatchSize": 1,
                "Enabled": true,
                "EventSourceArn": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            ":",
                            [
                                {
                                    "Ref": "AppSyncApiId"
                                },
                                "GetAtt",
                                "FollowingUserTable",
                                "StreamArn"
                            ]
                        ]
                    }
                },
                "FunctionName": {
                    "Fn::GetAtt": [
                        "ElasticSearchStreamingLambdaFunction",
                        "Arn"
                    ]
                },
                "StartingPosition": "LATEST"
            },
            "DependsOn": [
                "ElasticSearchStreamingLambdaFunction"
            ]
        },
        "SearchFollowingUserResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Ref": "GetAttGraphQLAPIApiId"
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "ElasticSearchDataSource",
                        "Name"
                    ]
                },
                "FieldName": "searchFollowingUsers",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Query",
                                        "searchFollowingUsers",
                                        "req",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "ResponseMappingTemplateS3Location": {
                    "Fn::Sub": [
                        "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
                        {
                            "S3DeploymentBucket": {
                                "Ref": "S3DeploymentBucket"
                            },
                            "S3DeploymentRootKey": {
                                "Ref": "S3DeploymentRootKey"
                            },
                            "ResolverFileName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        "Query",
                                        "searchFollowingUsers",
                                        "res",
                                        "vtl"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            },
            "DependsOn": [
                "ElasticSearchDataSource"
            ]
        }
    },
    "Outputs": {
        "ElasticsearchDomainArn": {
            "Description": "Elasticsearch instance Domain ARN.",
            "Value": {
                "Fn::GetAtt": [
                    "ElasticSearchDomain",
                    "DomainArn"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        ":",
                        [
                            {
                                "Ref": "AppSyncApiId"
                            },
                            "GetAtt",
                            "Elasticsearch",
                            "DomainArn"
                        ]
                    ]
                }
            }
        },
        "ElasticsearchDomainEndpoint": {
            "Description": "Elasticsearch instance Domain Endpoint.",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Fn::GetAtt": [
                                "ElasticSearchDomain",
                                "DomainEndpoint"
                            ]
                        }
                    ]
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        ":",
                        [
                            {
                                "Ref": "AppSyncApiId"
                            },
                            "GetAtt",
                            "Elasticsearch",
                            "DomainEndpoint"
                        ]
                    ]
                }
            }
        }
    },
    "Mappings": {
        "LayerResourceMapping": {
            "ap-northeast-1": {
                "layerRegion": "arn:aws:lambda:ap-northeast-1:249908578461:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "us-east-1": {
                "layerRegion": "arn:aws:lambda:us-east-1:668099181075:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "ap-southeast-1": {
                "layerRegion": "arn:aws:lambda:ap-southeast-1:468957933125:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "eu-west-1": {
                "layerRegion": "arn:aws:lambda:eu-west-1:399891621064:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "us-west-1": {
                "layerRegion": "arn:aws:lambda:us-west-1:325793726646:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "ap-east-1": {
                "layerRegion": "arn:aws:lambda:ap-east-1:118857876118:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "ap-northeast-2": {
                "layerRegion": "arn:aws:lambda:ap-northeast-2:296580773974:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "ap-northeast-3": {
                "layerRegion": "arn:aws:lambda:ap-northeast-3:961244031340:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "ap-south-1": {
                "layerRegion": "arn:aws:lambda:ap-south-1:631267018583:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "ap-southeast-2": {
                "layerRegion": "arn:aws:lambda:ap-southeast-2:817496625479:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "ca-central-1": {
                "layerRegion": "arn:aws:lambda:ca-central-1:778625758767:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "eu-central-1": {
                "layerRegion": "arn:aws:lambda:eu-central-1:292169987271:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "eu-north-1": {
                "layerRegion": "arn:aws:lambda:eu-north-1:642425348156:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "eu-west-2": {
                "layerRegion": "arn:aws:lambda:eu-west-2:142628438157:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "eu-west-3": {
                "layerRegion": "arn:aws:lambda:eu-west-3:959311844005:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "sa-east-1": {
                "layerRegion": "arn:aws:lambda:sa-east-1:640010853179:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "us-east-2": {
                "layerRegion": "arn:aws:lambda:us-east-2:259788987135:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "us-west-2": {
                "layerRegion": "arn:aws:lambda:us-west-2:420165488524:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "cn-north-1": {
                "layerRegion": "arn:aws-cn:lambda:cn-north-1:683298794825:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "cn-northwest-1": {
                "layerRegion": "arn:aws-cn:lambda:cn-northwest-1:382066503313:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "us-gov-west-1": {
                "layerRegion": "arn:aws-us-gov:lambda:us-gov-west-1:556739011827:layer:AWSLambda-Python-AWS-SDK:1"
            },
            "us-gov-east-1": {
                "layerRegion": "arn:aws-us-gov:lambda:us-gov-east-1:138526772879:layer:AWSLambda-Python-AWS-SDK:1"
            }
        }
    },
    "Conditions": {
        "ShouldUsePayPerRequestBilling": {
            "Fn::Equals": [
                {
                    "Ref": "DynamoDBBillingMode"
                },
                "PAY_PER_REQUEST"
            ]
        },
        "ShouldUsePointInTimeRecovery": {
            "Fn::Equals": [
                {
                    "Ref": "DynamoDBEnablePointInTimeRecovery"
                },
                "true"
            ]
        },
        "ShouldUseServerSideEncryption": {
            "Fn::Equals": [
                {
                    "Ref": "DynamoDBEnableServerSideEncryption"
                },
                "true"
            ]
        },
        "ShouldCreateAPIKey": {
            "Fn::Equals": [
                {
                    "Ref": "CreateAPIKey"
                },
                1
            ]
        },
        "APIKeyExpirationEpochIsPositive": {
            "Fn::And": [
                {
                    "Fn::Not": [
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "APIKeyExpirationEpoch"
                                },
                                -1
                            ]
                        }
                    ]
                },
                {
                    "Fn::Not": [
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "APIKeyExpirationEpoch"
                                },
                                0
                            ]
                        }
                    ]
                }
            ]
        },
        "HasEnvironmentParameter": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "env"
                        },
                        "NONE"
                    ]
                }
            ]
        }
    }
}